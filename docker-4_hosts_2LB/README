LiveAgent docker infra setup for 4 servers with LB on first and second, mysql on 3rd and 4th (master-master replication with backup set up on 3rd), redis on 1st and 2nd, elasticsearch on first, second and third.

PREREQUISITES:

* 4 physical/virtual hosts with enough RAM, CPU and disk space
* Debian 11 with SUDO privileges on all hosts
* compatible LA version .zip file stored on all hosts

BUILD INFO

    DO EVERY STEP ON ALL HOSTS UNLESS TOLD OTHERWISE
1.  Install GIT and run "cd /opt && git clone https://github.com/QualityUnit/LiveAgent-Docker.git"
2.  Enter version of docker setup you would like to install (1_host, 3_hosts...) and create valid ssl.crt and ssl.key files
3.  Modify config.sh file and enter all requested info
4.  Run "source config.sh"
5.  Enter "production/docker" directory on each host and run "source install_utils.sh"
6.  Run docker-compose on each host after step 7 is done "/usr/local/bin/docker-compose up -d"
7.  Run the following command on hosts 3 and 4 ("" included) - docker exec -i mysql mysql -e"source /tmp/initdb.sql;"
    - there will be an error on the 3rd or 4th host about "connecting to master" but it should disappear after 60 seconds
    - verify if mysql replication is set on both hosts via "show slave status\G" (both Slave_IO_Running and Slave_SQL_Running must be Yes without errors)
8.  Restart haproxy and xinetd on 1st and 2nd host and only xinetd on 3rd and 4th - "service xinetd restart && docker restart haproxy"
9.  Run "source install_liveagent.sh" on the first host
10. Enter "your_private_ip:9000/haproxy_stats" into your browser, username: admin and password you entered in config.sh for haproxy and check if all hosts are UP except one redis host as sentinels choose which redis host is master
11. Enjoy

BUILD CHANGES WHEN ALREADY IN PRODUCTION

* If you want to change some parameters of any of the containers, you can do it 2 ways:
1. you can go to container with "docker exec -it container_name bash" command and change your setting there and restart
   container afterwards for changes to take effect with "docker restart container_name"
2. you can modify "templates" directory and run "config.sh" script again, this will backup your old configs to "backup"
   directory and create new "production" dir and you can just restart any of your containers for changes to take effect...
   THIS STEP WILL NOT DELETE ANY OF YOUR DATA AS YOU ARE ONLY CHANGING THE WAY CONTAINERS ARE CREATED

LIVEAGENT VERSION UPDATE

*  download/move new version of LA .zip file to "/opt/docker1" directory
*  run version_update.sh script - "source version_update.sh"
*  follow instructions from the script

USEFUL DOCKER COMMANDS

*  docker --help        - all possible commands
*  docker ps            - diplay all running containers
*  docker ps -a         - display all containers
*  docker images        - display all images from which containers were build
*  docker start|stop|restart        - start, stop and restart container
*  docker rm|rmi        - remove container, remove image
*  docker volume prune  - remove all unused volumes
*  docker stats         - CPU, MEMORY, I/O stats of containers
*  docker logs -t container_name    - display container logs
*  docker cp <container_id>:/path/to/useful/file /local-path      - (useful when container won't start)
*  docker exec -it container_name bash      - enter bash shell of container (examples of shells: bash, mysql, redis-cli...)
*  /usr/local/bin/docker-compose up -d      - will bring up all containers stated in docker-compose.yml, when you destroy any container and it's image and you want to build it from the scratch with the same or different settings
*  /usr/local/bin/docker-compose down --rmi all      - stop and remove all containers with images
