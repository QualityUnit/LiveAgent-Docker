global
        log 127.0.0.1   local0
        maxconn 20000
        user haproxy
        group haproxy
        stats socket /var/run/haproxy_stats.sock mode 0666 level user
        stats socket /var/run/haproxy.sock mode 0600 level admin

defaults
        log global
        mode http
        option httplog
        option dontlognull
        retries 3

        option redispatch
        timeout connect      50000
        timeout client      500000
        timeout server      500000

        backlog 10000



backend health_check_backend
    errorfile 503 /srv/utils/health.lb-app.response.http



    listen ES 0.0.0.0:10200
        mode http
        option  httpchk

                server 1.es PRIVATE_IP_1:9200 check port 9200 inter 2000 rise 2 fall 6

                server 2.es PRIVATE_IP_2:9200 check port 9200 inter 2000 rise 2 fall 6

                server 3.es PRIVATE_IP_3:9200 check port 9200 inter 2000 rise 2 fall 6

                server 4.es PRIVATE_IP_4:9200 check port 9200 inter 2000 rise 2 fall 6


    listen APP haproxy:82
            mode http
            balance roundrobin
            cookie STICKYSESSION insert
            option httpclose
            option http-server-close
            option http-pretend-keepalive
            option httpchk HEAD /check.php HTTP/1.1\r\nHost:\ health.app
            option forwardfor

                    server 1.app PRIVATE_IP_1:800 cookie C1.app check inter 2000 rise 6 fall 6

                    server 2.app PRIVATE_IP_2:800 cookie C2.app check inter 2000 rise 6 fall 6

                    server 3.app PRIVATE_IP_3:800 cookie C3.app check inter 2000 rise 6 fall 6

                    server 4.app PRIVATE_IP_4:800 cookie C4.app check inter 2000 rise 6 fall 6



    listen DB 0.0.0.0:4306
            mode tcp
            option httpchk

                    server 1.db PRIVATE_IP_5:3306 check port 3000 inter 2s rise 600 fall 6 backup

                    server 2.db PRIVATE_IP_6:3306 check port 3000 inter 2s rise 600 fall 6




# Specifies TCP timeout on connect for use by the frontend ft_redis
# Set the max time to wait for a connection attempt to a server to succeed
# The server and client side expected to acknowledge or send data.
defaults REDIS
  mode tcp
  timeout connect 3s
  timeout server 6s
  timeout client 6s

# Specifies listening socket for accepting client connections using the default
# REDIS TCP timeout and backend bk_redis TCP health check.
frontend ft_REDIS
  bind *:7379 name redis
  default_backend bk_REDIS




# Specifies the backend Redis proxy server TCP health settings
# Ensure it only forward incoming connections to reach a master.
backend bk_REDIS
  option tcp-check
  tcp-check connect
  tcp-check send PING\r\n
  tcp-check expect string +PONG
  tcp-check send info\ replication\r\n
  tcp-check expect string role:master
  tcp-check send QUIT\r\n
  tcp-check expect string +OK
    server 1.redis PRIVATE_IP_1:6379 check inter 1s
    server 2.redis PRIVATE_IP_3:6379 check inter 1s backup

# WEB MONITORING
listen stats 0.0.0.0:9000       #Listen on all IP's on port 9000
    mode http
    balance
    timeout client 5000
    timeout connect 4000
    timeout server 30000
    stats hide-version

    #This is the virtual URL to access the stats page
    stats uri /haproxy_stats

    #Authentication realm. This can be set to anything. Escape space characters with a backslash.
    stats realm HAProxy\ Statistics

    #The user/pass you want to use. Change this password!
    stats auth admin:HAPROXY_PASS

    #This allows you to take down and bring up back end servers.
    #This will produce an error on older versions of HAProxy.
    stats admin if TRUE
